import{deepMerge as g}from"@celeris/utils";import{createI18n as f}from"vue-i18n";import{computed as l}from"vue";import{useLocalStorage as p}from"@celeris/hooks";import{LOCALES_STORE_KEY as m}from"@celeris/constants";var a=p(m,"en");function i(o){a.value=o}var n=l(()=>a.value);var e=class{static options={messagesHandler:()=>{},locale:"en",fallbackLocale:"en"};static configure(t){this.options={...this.options,...t}}static getOptions(){return this.options}static get locale(){return n.value||this.options.locale}static get fallbackLocale(){return this.options.fallbackLocale||this.locale}static get messagesHandler(){return this.options.messagesHandler}static get otherOptions(){return this.options.otherOptions}},r=class{static initLocales(t){e.configure(t())}static setMessagesHandler(t){e.configure({messagesHandler:t})}static setLocale(t){i(t),e.configure({locale:t})}static setFallbackLocale(t){e.configure({fallbackLocale:t})}static setOtherOptions(t){e.configure({otherOptions:t})}};var c;async function u(){return g({legacy:!1,locale:e.locale,fallbackLocale:e.fallbackLocale,messages:await e.messagesHandler()},e.otherOptions)}async function k(o){let t=await u();c=f(t),o.use(c)}import s from"iso-639-1";var N=s.getAllCodes().map(o=>({code:o,nativeName:s.getNativeName(o),name:s.getName(o)}));import{useI18n as M}from"vue-i18n";export{e as LocalesConfiguration,r as LocalesEngine,c as i18n,N as languagesNameList,k as setupI18n,M as useI18n};
